//
//  SystemScanViewController.swift
//  AdBlock
//
//  Created by Igor Ryazancev on 3/5/20.
//  Copyright Â© 2020 DEVBUFF. All rights reserved.
//

import UIKit
import MBCircularProgressBar
import Firebase
import FirebaseRemoteConfig

final class SystemScanLocationViewController: UIViewController {

    @IBOutlet private weak var progressView: MBCircularProgressBarView!
    @IBOutlet private weak var subtitleLabel: UILabel!
    
    private var firstText = ""
    private var secondText = ""
    private var thirdText = ""
    private var fourthText = ""
    private var fiveText = ""
    private var sixText = ""
    private var sevenText = ""
    private var timer: Timer?

}

//MARK: - Lifecycle
extension SystemScanLocationViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()

        setup()
    }
    
}


//MARK: - Setups
private extension SystemScanLocationViewController {
    
    func setup() {
        setupRemoteConfig()
        setupRingView()
    }
    
    func setupRingView() {
        progressView.value = 1
        var timerNumber = 0
        timer = Timer.scheduledTimer(withTimeInterval: 0.3, repeats: true, block: { [unowned self] (_) in
            timerNumber += 1
            switch timerNumber {
            case 1:
                self.progressView.value = 13
                self.subtitleLabel.text = self.firstText
            case 2:
                self.progressView.value = 28
                self.subtitleLabel.text = self.secondText
            case 3:
                self.progressView.value = 41
                self.subtitleLabel.text = self.thirdText
            case 4:
                self.progressView.value = 55
                self.subtitleLabel.text = self.fourthText
            case 5:
                self.progressView.value = 78
                self.subtitleLabel.text = self.fiveText
            case 6:
                self.progressView.value = 89
                self.subtitleLabel.text = self.sixText
            default:
                self.progressView.value = 100
                self.subtitleLabel.text = self.sevenText
                self.timer?.invalidate()
                self.timer = nil
                DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) { [unowned self] in
                    let vc = TrackedLocationViewController(nibName: "TrackedLocationViewController", bundle: nil)
                    self.navigationController?.pushViewController(vc, animated: true)
                }
            }
        })
    }
    
    func updateVew() {
        let rc = RemoteConfig.remoteConfig()
        let firstString = rc.configValue(forKey: "first_screen_2_malware2").stringValue
        let secondString = rc.configValue(forKey: "second_screen_2_malware2").stringValue
        let thirdString = rc.configValue(forKey: "third_screen_2_malware2").stringValue
        let fouthString = rc.configValue(forKey: "fourth_screen_2_malware2").stringValue
        let fiveString = rc.configValue(forKey: "five_screen_2_malware2").stringValue
        let sixString = rc.configValue(forKey: "six_screen_2_malware2").stringValue
        let sevenString = rc.configValue(forKey: "seven_screen_2_malware2").stringValue
        DispatchQueue.main.async { [unowned self] in
            self.firstText = firstString ?? ""
            self.secondText = secondString ?? ""
            self.thirdText = thirdString ?? ""
            self.fourthText = fouthString ?? ""
            self.fiveText = fiveString ?? ""
            self.sixText = sixString ?? ""
            self.sevenText = sevenString ?? ""
        }
        
    }
    
    func setupRemoteConfig() {
        let defaultValues: [String: Any] = ["first_screen_2_malware2": "Boot configuration",
                                            "second_screen_2_malware2": "Installed application",
                                            "third_screen_2_malware2": "Browser cache",
                                            "fourth_screen_2_malware2": "Tracking list",
                                            "five_screen_2_malware2": "Spam list",
                                            "six_screen_2_malware2": "Connection info",
                                            "seven_screen_2_malware2": "Scan complete"]
        RemoteConfig.remoteConfig().setDefaults(defaultValues as? [String : NSObject])
        updateVew()
    }
    
    func enableDeveloperMode() {
      
        
    }
    
}
