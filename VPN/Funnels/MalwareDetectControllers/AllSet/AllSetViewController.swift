//
//  AllSetViewController.swift
//  AdBlock
//
//  Created by Igor Ryazancev on 3/5/20.
//  Copyright Â© 2020 DEVBUFF. All rights reserved.
//

import UIKit
import SafariServices
import Firebase
import FirebaseRemoteConfig


final class AllSetViewController: UIViewController {

    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var okButton: UIButton!
    
    @IBAction func okButtonAction(_ sender: Any) {
        settings.wasFunnel = false
        showSpinner(onView: view)
        settings.malwareDone = true
            
            DispatchQueue.main.asyncAfter(deadline: .now() + 2.0) { [unowned self] in
                let window = UIApplication.shared.keyWindow
                
//                if state?.isEnabled == true {
//                    let mainScreenVC = MainScreenViewController(nib: R.nib.mainScreenViewController)
//                    let nc = UINavigationController(rootViewController: mainScreenVC)
//                    window?.rootViewController = nc
//                } else {
//                    let instructionsVC = InstructionViewController(nib: R.nib.instructionViewController)
//                    window?.rootViewController = instructionsVC
//                }
                self.removeSpinner()
            }
            
        
    }
    
}

//MARK: - Lifecycle
extension AllSetViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()

        showAlert()
        
        fetchRemoteConfig()
        setupRemoteConfig()
    }
    
}

//MARK: - Private funcs
private extension AllSetViewController {
    
    func updateVew() {
        let rc = RemoteConfig.remoteConfig()
        let titleString = rc.configValue(forKey: "malware_allset_title").stringValue
        let okString = rc.configValue(forKey: "malware_allset_okButton").stringValue
        
        DispatchQueue.main.async { [unowned self] in
            self.titleLabel.text = titleString
            self.okButton.setTitle(okString, for: .normal)
           
        }
        
    }
    
    func setupRemoteConfig() {
        let defaultValues: [String: Any] = ["malware_allset_okButton": "Ok",
                                            "malware_allset_title": "Success"]
        RemoteConfig.remoteConfig().setDefaults(defaultValues as? [String : NSObject])
        updateVew()
    }
    
    func enableDeveloperMode() {
      
        
    }
    
    func fetchRemoteConfig() {
        RemoteConfig.remoteConfig().fetch(withExpirationDuration: 0) { [unowned self] (status, error) in
            if error == nil {
                print("status  \(status.rawValue)")
                RemoteConfig.remoteConfig().activate { (error) in
                    print("aactivate error \(error?.localizedDescription ?? "")")
                    self.updateVew()
                }
            } else {
                print(error?.localizedDescription ?? "")
            }
        }
    }
    
    func showAlert() {
        let alert = UIAlertController(title:"You're all set",
                                      message: "Your purchase was successfuly", preferredStyle: .alert)
        let okAction = UIAlertAction(title: "Ok", style: .default) { (_) in
            
        }
        
        alert.addAction(okAction)
        present(alert, animated: true, completion: nil)
    }
    
}
